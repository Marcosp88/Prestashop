

const request = require('requestretry');
var request1 = require('request');
const RequestRetry = require('node-request-retry');
var moment = require('moment');
var moment1 = require('moment-timezone');
const xml2js = require('xml2js');
var crypto = require('crypto');
var js2xmlparser = require("js2xmlparser");
var http = require('http');
var https = require('https');
var beautify = require("json-beautify");
var nodemailer = require('nodemailer');
var requestRetry = new RequestRetry();
process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = 0;
var convert = require('xml-js');
var valor_dolar = 0;
var margen = 7;
var cantidad_de_productos = 0;
const fs = require('fs'); 
const arregloIngram = [];
const arregloTecnoglobal = [];

//POOL HTTPS
http_pool = new http.Agent();

http_pool.maxSockets = 3;
http_pool.maxAttempts = 40;
http_pool.retryDelay = 3000;
http_pool.timeout = 13000;
http_pool.noResponseRetries = 40;
http_pool.retries = 40;
http_pool.retrySrategy = request.RetryStrategies.HTTPOrNetworkError;

//POOL HTTPS
https_pool = new https.Agent();

https_pool.maxSockets = 3;
https_pool.maxAttempts = 40;
https_pool.retryDelay = 3000;
https_pool.timeout = 13000;
https_pool.noResponseRetries = 40;
https_pool.retries = 40;
https_pool.retrySrategy = request.RetryStrategies.HTTPSOrNetworkError;

var mysql = require('mysql');

var numero_deletes = 0;

var pool = mysql.createPool({
    connectTimeout: 5500,
    connectionLimit: 2,
    host: "",
    user: "",
    password: "",
    database: "",
    waitForConnections: true
});

var pool2 = mysql.createPool({
    connectTimeout: 5500,
    connectionLimit: 2,
    host: "",
    user: "",
    password: "",
    database: "",
    waitForConnections: true
});

main_general();
function main_general(){
    try {
        var get_fecha = obtiene_fecha();
        get_fecha.then(function(result, error){
            if(error){
                console.log("error: "+ error);
            }
            if(result == 2){
                console.log("ES DIA DE SEMANA");
                var filtro_cantidad = 2;
                try {
                    var mainee = main3(filtro_cantidad);
                    mainee.then(function(result, error){
                        if(error){
                            console.log("error: "+ error);
                        }
                        if(result){
                            var ing_act = main2(filtro_cantidad);
                            ing_act.then(function(result, error){
                                if(error){
                                    console.log("error: "+ error);    
                                }
                            });
                        }
                    });
                }catch(err) {
                    console.log(err)
                }
            }
            if (result == 9) {
                console.log("ES FIN DE SEMANA O FERIADO");
                var filtro_cantidad = 9;
                try {
                    var mainee = main3(filtro_cantidad);
                    mainee.then(function(result, error){
                        if(error){
                            console.log("error: "+ error);
                        }
                        if(result){
                            var ing_act = main2(filtro_cantidad);
                            ing_act.then(function(result, error){
                                if(error){
                                    console.log("error: "+ error);    
                                }
                            });
                        }
                    });
                }catch(err) {
                    console.log(err)
                }
            }
        });
    }catch(err) {
        console.log(err)
    }
}


async function obtiene_fecha(){

    var fecha_resp = await new Promise(function(resolve, reject) {
        try{
            var calendario = new Date();
            var year = calendario.getFullYear();
            var months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
            var mes = months[calendario.getMonth()];
            var fecha_dia = calendario.getDate();
            var dia_de_semana = calendario.getDay();

            if (dia_de_semana > 0 && dia_de_semana <= 5) {
                var options = {
                  'method': 'GET',
                  'url': 'https://apis.digital.gob.cl/fl/feriados/'+year+'/'+mes+'/'+fecha_dia+'',
                  'headers': {
                    'Cookie': 'laravel_session=eb3e6a5400d6bbe0620c8d2c8ae0593b7d82ce1f%2BRFreLg488bf1bcimzeSYApGeg9F4ZUPXopjYBLMN; session_payload=517043ede4b2d5b595b973f02b3a04e2fe26694c%2BJRsaV2Oysn1MTsxdmADw3ADbQkiJBwjjtca7VoDj8%2B8PcgWGjBPFVQg0CZk6hcDuEHsbmMdw4%2F9Y7YLBhOW3W354SEptLoFtogCU8U%2Bszt7j8OhDqgMbSDLk%2FrSk44%2FaLfyieOXiod61CrKxx%2Fal2tnmfNjfkSzX5sLYFu9Ck1xlRAO%2BPU85dCrkvz5HBYxFddYg%2BaywcP54hos7xqL5TPvbh6AD4fBaM4VYqaJm2OWzBYKdNOZ6JolGS8ca6csofVokz%2BuinpjIoylUap3im8WU4XPzhAk4kLzGfjwZE1SKawCnqlEs59xZppPXuVawCU%2By6FNpb8WV2jW4d5jKiA%3D%3D'
                  }
                };
                request1(options, function (error, response) {
                    if (error) throw new Error(error);
                    respuesta = JSON.parse(response.body);

                    if (respuesta.error == true) {
                        resolve(2);
                    }else{
                        resolve(9);
                    }
                });
            }else{
                resolve(9);
                console.log("Fin de Semana");
            }
        }catch(err) {
            console.log(err)
        }
    });
    return fecha_resp;

}
async function obtener_token(){
    url = 'https://api.ingrammicro.com/oauth/oauth20/token?client_id=&client_secret=&grant_type=client_credentials';

    var token_acceso = await new Promise(function(resolve, reject) {
        try{
            request.get({url, agent: https_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        var jsonObject = JSON.parse(body);
                        resolve(jsonObject.access_token);
                    } else {
                        console.log("SIN body en token");
                        reject("No body en obtener token");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return token_acceso;
}

async function obtener_token_intcomex(){
    var token_acceso = await new Promise(function(resolve, reject) {
    var api_key = '';     
    var user_key = '';     
    var pre_hash =  api_key+','+user_key;  
        try{
            UTC_key = new Date().toISOString();
            hash = crypto.createHash('sha256').update(pre_hash+','+UTC_key).digest('hex');
            resolve(1);

        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return {
        hash: hash, 
        UTC_key: UTC_key
    };
}

async function obtiene_valor_dolar() {   
    var api_key = ""
    var url = 'http://api.sbif.cl/api-sbifv3/recursos_api/dolar?apikey='+api_key+'&formato=json'
    
    var valor_dolar = await new Promise(function(resolve, reject) {
        try{
            request.get({url, agent: http_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        try{
                            var jsonObject = JSON.parse(body);
                            precio_dolar = jsonObject.Dolares[0].Valor.replace(',', '.')
                            resolve(precio_dolar);
                        }catch{
                            console.log("NO FUNCIONA API SBIF, ENTRANDO A VALOR DOLAR BUCH");
                            try{
                                var options = {
                                  'method': 'GET',
                                  'url': 'company_ERP_WS/web/services/VALOR_DOLAR/valor_dolar',
                                  'key': fs.readFileSync('/CMP/certificados/.key'),
                                  'cert': fs.readFileSync('/CMP/certificados/.pem'),  
                                  'ca': fs.readFileSync('/CMP/certificados/.pem'),  
                                  'passphrase': '',
                                  'secureProtocol': 'TLSv1_1_method'
                                };
                                request1(options, function (error, response) {
                                    if (error){
                                        console.log("error : " + error);
                                    }else{
                                        if (response.body) {
                                            var jsonObject = JSON.parse(response.body);
                                            if (jsonObject["SQLStateInfo"]){
                                                resolve(0);
                                            }
                                            if (jsonObject["VALOR_DOLAR_Obtiene_valor_dolar_R"] == null){
                                                resolve(0);
                                            }else{
                                                var precio_dolar = jsonObject["VALOR_DOLAR_Obtiene_valor_dolar_R"]["VALO"];
                                                console.log(precio_dolar);
                                                resolve(precio_dolar);
                                            }
                                        }
                                    }

                                });
                            } catch(error) {
                                console.log("error : " + error);
                                reject(error);
                            }
                        }
                    } else {
                        console.log("SIN body en dolar1");
                        resolve(0);
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return valor_dolar;
}

async function obtiene_productos_tecnoglobal() {    
    var api_key = "";
    var url = 'http://200.6.78.34/stock/v1/price/';
    var user = '';
    var auth = 'Basic ' + new Buffer(user+':'+api_key).toString('base64'); 
    
    headers = {
        'Authorization': auth
    }
    var tecnoglobal_prod = await new Promise(function(resolve, reject) {
        try{
            request.get({url, headers, agent: http_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        var jsonObject = JSON.parse(body);
                        var jsonContent = JSON.stringify(jsonObject);
                         
                        //guarda el JSON con el arreglo de los productos CMP
                        fs.writeFile("/CMP/actualizador_stock_prestashop/output.json", jsonContent, 'utf8', function (err) {
                            if (err) {
                                console.log("Error durante el guardado del JSON");
                                return console.log(err);
                            }
                         
                            console.log("JSON file se ha guardado TECNOGLOBAL.");
                            resolve("1");
                        }); 
                        
                    } else {
                        console.log("SIN body en dolar");
                        reject("No body en obtener dolar");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return tecnoglobal_prod;
}
 
async function obtiene_productos_CMP() {     
    var api_key = '';
    var url = 'https://ecommerce.CMP.cl/api/products/?output_format=JSON';
    var user = '';
    var auth = 'Basic ' + new Buffer(user+':'+api_key).toString('base64');
    headers = {
        'Authorization': auth
    }
    var prod_CMP = await new Promise(function(resolve, reject) {
        try{
            request.get({url, headers, agent: https_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        var jsonObject = JSON.parse(body);

                        var jsonContent = JSON.stringify(jsonObject);
                        //guarda el JSON con el arreglo de los productos CMP
                        fs.writeFile("prodCMP.json", jsonContent, 'utf8', function (err) {
                            if (err) {
                                console.log("Error durante el guardado del JSON");
                                return console.log(err);
                            }
                            console.log("JSON file se ha guardado.");
                        }); 
                        
                    } else {
                        console.log("Sin body prod CMP");
                        reject("No hay body en prod CMP");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return prod_CMP;
}


async function obtiene_id_prestashop_tecnoglobal() {     
    var api_key = '';
    var proveedor = 3;
    var url = 'https://ecommerce.CMP.cl/api/products?filter[id_supplier]=['+proveedor+']&filter[active]=[1, 0]&display=[id, price, quantity, active, reference]&output_format=JSON';
    var user = '';
    var auth = 'Basic ' + new Buffer(user+':'+api_key).toString('base64');
    headers = {
        'Authorization': auth
    }
    var prod_CMP = await new Promise(function(resolve, reject) {
        try{
            request.get({url, headers, agent: https_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        var jsonObject = JSON.parse(body);
                        resolve(jsonObject);
                    } else {
                        console.log("Sin body prod CMP");
                        reject("No hay body en prod CMP");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return prod_CMP;
}

async function obtiene_id_prestashop_ingram() {     
    var api_key = '';
    var proveedor = 2;
    var url = 'https://ecommerce.CMP.cl/api/products?filter[id_supplier]=['+proveedor+']&filter[active]=[1, 0]&display=[id, price, quantity, active, reference]&output_format=JSON';
    var user = '';
    var auth = 'Basic ' + new Buffer(user+':'+api_key).toString('base64');
    headers = {
        'Authorization': auth
    }
    var prod_CMP1 = await new Promise(function(resolve, reject) {
        try{
            request.get({url, headers, agent: https_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        var jsonObject = JSON.parse(body);
                        resolve(jsonObject);
                    } else {
                        console.log("Sin body prod CMP");
                        reject("No hay body en prod CMP");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return prod_CMP1;
}

async function obtiene_id_prestashop_intcomex() {     
    var api_key = '';
    var proveedor = 4;
    var url = 'https://ecommerce.CMP.cl/api/products?filter[id_supplier]=['+proveedor+']&filter[active]=[1, 0]&display=[id, price, quantity, active, reference]&output_format=JSON';
    var user = '';
    var auth = 'Basic ' + new Buffer(user+':'+api_key).toString('base64');
    headers = {
        'Authorization': auth
    }
    var prod_CMP1 = await new Promise(function(resolve, reject) {
        try{
            request.get({url, headers, agent: https_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        var jsonObject = JSON.parse(body);
                        resolve(jsonObject);
                    } else {
                        console.log("Sin body prod CMP");
                        reject("No hay body en prod CMP");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return prod_CMP1;
}

async function obtener_sku_intcomex(jsonProduct){
array = [];
array2 = [];
for(var i=0;i<jsonProduct.products.length;i++){
   var api_key = '';
    var proveedor = 4;
    var url = 'https://ecommerce.CMP.cl/api/product_suppliers?filter[id_product]=['+jsonProduct.products[i].id+']&output_format=JSON&display=[product_supplier_reference]';
    var user = '';
    var auth = 'Basic ' + new Buffer(user+':'+api_key).toString('base64');
    headers = {
        'Authorization': auth
    }
    var prod_CMP = await new Promise(function(resolve, reject) {
        try{
            request.get({url, headers, agent: https_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        var jsonObject = JSON.parse(body);
                        resolve(jsonObject);
                        array.push({    
                                        "sku" : jsonObject.product_suppliers[0].product_supplier_reference,
                                        "active" : jsonProduct.products[i].active,
                                        "reference" : jsonProduct.products[i].reference,
                                        "id_producto" : jsonProduct.products[i].id,
                                        "proveedor" : proveedor,
                                    });
                        resolve(array);
                    } else {
                        console.log("Sin body prod CMP");
                        reject("No hay body en prod CMP");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    if (i==jsonProduct.products.length - 1 ){
    array2 = array2.concat(array);
    }
}
    return array2;
}
async function obtener_sku_tecnoglobal(jsonProduct){
array = [];
array2 = [];
for(var i=0;i<jsonProduct.products.length;i++){
   var api_key = '';
    var proveedor = 3;
    var url = 'https://ecommerce.CMP.cl/api/product_suppliers?filter[id_product]=['+jsonProduct.products[i].id+']&output_format=JSON&display=[product_supplier_reference]';
    var user = '';
    var auth = 'Basic ' + new Buffer(user+':'+api_key).toString('base64');
    headers = {
        'Authorization': auth
    }
    var prod_CMP = await new Promise(function(resolve, reject) {
        try{
            request.get({url, headers, agent: https_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        var jsonObject = JSON.parse(body);
                        resolve(jsonObject);
                        array.push({    
                            "sku" : jsonObject.product_suppliers[0].product_supplier_reference,
                            "active" : jsonProduct.products[i].active,
                            "reference" : jsonProduct.products[i].reference,
                            "id_producto" : jsonProduct.products[i].id,
                            "proveedor" : proveedor,
                        });
                        resolve(array);
                    } else {
                        console.log("Sin body prod CMP");
                        reject("No hay body en prod CMP");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    if (i==jsonProduct.products.length - 1 ){
    array2 = array2.concat(array);
    }
}
    return array2;
}

async function obtener_sku_ingram(jsonProduct){
array = [];
array2 = [];
for(var i=0;i<jsonProduct.products.length;i++){
   var api_key = '';
    var proveedor = 2;
    var url = 'https://ecommerce.CMP.cl/api/product_suppliers?filter[id_product]=['+jsonProduct.products[i].id+']&output_format=JSON&display=[product_supplier_reference]';
    var user = '';
    var auth = 'Basic ' + new Buffer(user+':'+api_key).toString('base64');
    headers = {
        'Authorization': auth
    }
    var prod_CMP = await new Promise(function(resolve, reject) {
        try{
            request.get({url, headers, agent: https_pool}, function (err, res, body) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (body) {
                        var jsonObject = JSON.parse(body);
                        resolve(jsonObject);
                        array.push({    
                            "sku" : jsonObject.product_suppliers[0].product_supplier_reference,
                            "active" : jsonProduct.products[i].active,
                            "reference" : jsonProduct.products[i].reference,
                            "id_producto" : jsonProduct.products[i].id,
                            "proveedor" : proveedor,
                        });
                        resolve(array);
                        
                    } else {
                        console.log("Sin body prod CMP");
                        reject("No hay body en prod CMP");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    if (i==jsonProduct.products.length - 1 ){
    array2 = array2.concat(array);
    }
}
    return array2;
}

async function activa_o_desactiva_CSV(array_ig_final){

    var act_csv = await new Promise(function(resolve, reject) {
        try{
            fs.readFile('/actualizador_stock_prestashop/split_csv_ingram/data.json', function (err, data) {
                if (err) {
                    console.log("error: " + err);
                    reject(err);
                } else {
                    if (data) {
                        var csv_file = JSON.parse(data);
                        for (let j = 0; j < array_ig_final.length; j++) {
                            if (csv_file.includes(array_ig_final[j].sku)) {
                            }else{
                                array_ig_final[j].deshabilitar = true;
                                resolve(array_ig_final);
                            }
                        }
                        for (let i = 0; i < csv_file.length; i++) {
                            if (csv_file[i].id == array_ig_final[0].sku && (csv_file[i].Availability == 0)){
                                array_ig_final[0].deshabilitar = true;
                                array_ig_final[0].cantidad_disponible = 0;
                                resolve(array_ig_final);
                            }
                            if ((csv_file[i].id == array_ig_final[0].sku) && (csv_file[i].Availability == 1)){
                                array_ig_final[0].deshabilitar = false;                          
                                resolve(array_ig_final);
                            }
                        }
                        resolve(array_ig_final);

                    } else {
                        reject("No body CSV");
                    }
                }
            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return act_csv;
}

async function compara_precios(ig_final, valor_dolar, filtro_cantidad){
    actualiza_productos_CMP_ing(ig_final, valor_dolar, filtro_cantidad);
}

async function obtiene_datos_json_tecnoglobal(arregloProductos){
    var obj;
    var tecno = [];
    var codigoSKU = [];
    array_prod_tecnoglobal = await new Promise(function(resolve, reject) {
        array = [];
        fs.readFile('/actualizador_stock_prestashop/output.json', 'utf8', function (err, data) {
          if (err) throw err;
          obj = JSON.parse(data);
            for (let j = 0; j < arregloProductos.length; j++) {
                codigoSKU = arregloProductos[j].sku;
                id_producto = arregloProductos[j].id_producto;
                activo = arregloProductos[j].active;
                reference = arregloProductos[j].reference;
                proveedor = arregloProductos[j].proveedor;
                var existe = 0;
                for (let i = 0; i < obj.products.length; i++) {
                    tecno = obj.products[i].codigoTg;
                    if (obj.products[i].codigoTg == codigoSKU){
                        existe = 1;
                        let ts = Date.now();
                        let date_ob = new Date(ts);
                        let date = date_ob.getDate();
                        let month = date_ob.getMonth() + 1;
                        let year = date_ob.getFullYear();
                        let hours = date_ob.getHours();
                        let minutes = date_ob.getMinutes();
                        if (obj.products[i].stockDisp > 0) {
                            activo = 1;
                            array.push({    
                                "sku" : codigoSKU,
                                "reference" : reference,
                                "active" : activo,
                                "id_producto" : id_producto,
                                "precio" : obj.products[i].precio,
                                "tipoMoneda" : obj.products[i].tipoMoneda,
                                "dolarTg" : obj.products[i].dolarTg,
                                "timeStamp" : year + "-" + month + "-" + date + "." + hours + "." + minutes,
                                "stockDisp" : obj.products[i].stockDisp,
                                "partNumber" : obj.products[i].pnFabricante,
                                "proveedor" : proveedor,
                            });
                        }else{
                            array.push({    
                                "sku" : codigoSKU,
                                "reference" : reference,
                                "active" : activo,
                                "id_producto" : id_producto,
                                "precio" : obj.products[i].precio,
                                "tipoMoneda" : obj.products[i].tipoMoneda,
                                "dolarTg" : obj.products[i].dolarTg,
                                "timeStamp" : year + "-" + month + "-" + date + "." + hours + "." + minutes,
                                "stockDisp" : obj.products[i].stockDisp,
                                "partNumber" : obj.products[i].pnFabricante,
                                "proveedor" : proveedor,
                            });
                        }
                    }
                }
                if (existe == 0){
                    var promesa_api = inactiva_si_no_existe(arregloProductos[j].id_producto);
                        promesa_api.then(function(result,error){
                            if(error){
                                console.log("Error promesa api: " + error);
                            } else {
                                if(result){
                                }
                              }
                        });        
                }
                if (j == arregloProductos.length - 1){
                    resolve(array);
                }
            }
        });
    });
}

async function obtiene_datos_json_ingram(sku2, id_producto2, reference, token_ingram) {
        try {
            var partNumber = 0;
            var cantidad_existente = 0;
            var precio_unitario = 0;
            var moneda = undefined;
            var deshabilitar = false;
            var eliminar = false;
            var codigo_global = 0;
            
            resultado = await new Promise(function (resolve, reject) {
                post_data = `{  
                    "servicerequest":{
                         "requestpreamble":{  
                          "customernumber":"146423",
                          "isocountrycode":"CL"
                       },
                       "priceandstockrequest":{  
                          "showwarehouseavailability":"True",
                          "extravailabilityflag":"Y",
                          "item":[  
                            {"ingrampartnumber":"` + sku2 + `","quantity":1}
                          ],
                          "includeallsystems":false
                       }
                    }
                 }`;
                requestRetry.post({
                    url: "https://api.ingrammicro.com:443/products/v4/multiskupriceandstock",
                    port: 80,
                    method: "POST",
                    agent: https_pool,
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + token_ingram
                    },
                    body: post_data                
                },      
                        async function (error, response, body) {
                            if(response.statusCode != 200){
                            }
                            try {
                                contenido = JSON.parse(body);
                                if (contenido['serviceresponse']['responsepreamble']['responsestatus'] === 'SUCCESS') {
                                    for(var key1 in contenido.serviceresponse.priceandstockresponse.details) {

                                        if(contenido.serviceresponse.priceandstockresponse.details[key1].itemstatus === "SUCCESS"){
                                            if(contenido.serviceresponse.priceandstockresponse.details[key1].isavailable === true ){
                                                precio_unitario = contenido.serviceresponse.priceandstockresponse.details[key1].customerprice;
                                                cantidad_existente = contenido.serviceresponse.priceandstockresponse.details[key1].warehousedetails[0].availablequantity;
                                                partNumber = contenido.serviceresponse.priceandstockresponse.details[key1].globalskuid;
                                                codigo_global = contenido.serviceresponse.priceandstockresponse.details[key1].vendorpartnumber;
                                                deshabilitar = false;
                                                resolve(1);
                                            }
                                            else {
                                                precio_unitario = contenido.serviceresponse.priceandstockresponse.details[key1].customerprice;
                                                cantidad_existente = contenido.serviceresponse.priceandstockresponse.details[key1].warehousedetails[0].availablequantity;
                                                partNumber = contenido.serviceresponse.priceandstockresponse.details[key1].globalskuid;
                                                codigo_global = contenido.serviceresponse.priceandstockresponse.details[key1].vendorpartnumber;
                                                deshabilitar = true;
                                                resolve("No se reconoce el SKU0: " + sku2);
                                            };
                                            
                                        }
                                    }
                                } else {
                                    deshabilitar = true;
                                    resolve("No se reconoce el SKU0: " + sku2);
                                }
                            } catch (e) {
                                if(response.statusCode != 200) {
                                    console.log("Error en SKU: '" + sku2 + "'");
                                    reject("1");
                                }
                            }
                        });
                    });
        } catch (e) {
        }
            var respuesta = [];
            var str_date = moment1(new Date()).tz("America/Santiago").format("YYYY-MM-DD HH:mm:ss");
            respuesta.push({
                "Proveedor" : "INGRAM",
                "id_producto" : id_producto2,
                "fecha" : str_date,
                "sku" : sku2,
                "reference" : reference,
                "precio_unitario" : precio_unitario,
                "cantidad_disponible" : cantidad_existente,
                "deshabilitar" : deshabilitar,
                "eliminar" : eliminar,
                "partNumber" : partNumber,
                "codigo_global" : codigo_global
            });
        return(respuesta);
}

async function obtiene_datos_json_intcomex(arregloProductos){
    var obj;
    var intcomex = [];
    var codigoSKU = [];
    array_prod_intcomex = await new Promise(function(resolve, reject) {
        array = [];
        fs.readFile('/actualizador_stock_prestashop/Intcomex/final_intcomex.json', 'utf8', function (err, data) {
          if (err) throw err;
          obj = JSON.parse(data);
            for (let j = 0; j < arregloProductos.length; j++) {
                codigoSKU = arregloProductos[j].sku;
                id_producto = arregloProductos[j].id_producto;
                activo = arregloProductos[j].active;
                reference = arregloProductos[j].reference;
                proveedor = arregloProductos[j].proveedor;
                var existe = 0;
                for (let i = 0; i < obj.length; i++) {
                    intcomex = obj[i].sku;
                    if (obj[i].sku == codigoSKU){
                        existe = 1;
                        let ts = Date.now();
                        let date_ob = new Date(ts);
                        let date = date_ob.getDate();
                        let month = date_ob.getMonth() + 1;
                        let year = date_ob.getFullYear();
                        let hours = date_ob.getHours();
                        let minutes = date_ob.getMinutes();
                        if (obj[i].stock > 0) {
                            inactivo = 0;
                            array.push({    
                                "sku" : codigoSKU,
                                "reference" : reference,
                                "active" : inactivo,
                                "id_producto" : id_producto,
                                "precio" : obj[i].price,
                                "tipoMoneda" : 'us',
                                "timeStamp" : year + "-" + month + "-" + date + "." + hours + "." + minutes,
                                "stockDisp" : obj[i].stock,
                                "partNumber" : obj[i].sku,
                                "proveedor" : proveedor,
                            });
                        }else{
                            inactivo = 1;
                            array.push({    
                                "sku" : codigoSKU,
                                "reference" : reference,
                                "active" : inactivo,
                                "id_producto" : id_producto,
                                "precio" : obj[i].price,
                                "tipoMoneda" : 'us',
                                "timeStamp" : year + "-" + month + "-" + date + "." + hours + "." + minutes,
                                "stockDisp" : obj[i].stock,
                                "partNumber" : obj[i].sku,
                                "proveedor" : proveedor,
                            });
                        }
                    }
                }
                if (existe == 0){
                    var promesa_api = inactiva_si_no_existe(arregloProductos[j].id_producto);
                    promesa_api.then(function(result,error){
                        if(error){
                            console.log("Error promesa api: " + error);
                        } else {
                            if(result){
                            }
                          }
                    });        
                }

                if (j == arregloProductos.length - 1){
                    resolve(array);
                }
            }
        });
    });
    return array_prod_intcomex;
}

async function inactiva_si_no_existe(id_producto) {
    res = await new Promise(function (resolve, reject) {
        try {      
            var str_date = moment1(new Date()).tz("America/Santiago").format("YYYY-MM-DD HH:mm:ss");
            var datetime = str_date;
            var sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
            var sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
            var sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
            pool.getConnection(function (err, connection) {
                if (err) {
                    console.log(err);
                }
                connection.query(sql, function (error, result, fields) {
                   if (error) {
                   }else{
                        connection.query(sql2, function (error, result, fields) {
                            if(error){
                                console.log(error);
                            } else {
                                connection.query(sql3, function (error, result, fields) {
                                    if(error){
                                        console.log(error);
                                    } else {
                                            if (connection){
                                                connection.destroy();
                                            } 
                                    }         
                                });   
                              }    
                        });         
                   }                                    
                    resolve("1");
                });     
            });

        }catch (e) {
           console.log(e);
           reject(0);
        }
    });        
}

function parse(str) {
    var args = [].slice.call(arguments, 1),
            i = 0;
    return str.replace(/%s/g, () => args[i++]);
}

function replaces(str) {
    return str.toString().replace('#','%23').replace('/', '%2F');
}
async function actualiza_productos_CMP_tec(array_prod_tecnoglobal, valor_dolar, filtro_cantidad){

for(var i=0;i<array_prod_tecnoglobal.length;i++){
    var codigo_global_PN = replaces(array_prod_tecnoglobal[i].reference);
    var proveedor = 3;
    var str_date = moment1(new Date()).tz("America/Santiago").format("YYYY-MM-DD HH:mm:ss");
    var datetime = str_date;
    var result_str = "";
    var deshabilitar =  false;
    var eliminar = false;
    var precio = array_prod_tecnoglobal[i].precio;
    var cantidad = array_prod_tecnoglobal[i].stockDisp;
    var id_producto = array_prod_tecnoglobal[i].id_producto;
    var sku = array_prod_tecnoglobal[i].sku;
    var cientoveniente_dolares = parseFloat(valor_dolar*120).toFixed(2);
    
    res = await new Promise(function (resolve, reject) {

        try {
            var margen_buch = obtener_margen(precio, codigo_global_PN);
            margen_buch.then(function(result, error){
                if(error){
                    console.log("error: "+ error);
                }if(result == 0){
                    const margen_def = margen; 
                    var precio_peso_margen1 = parseFloat(precio*valor_dolar).toFixed(2)  / (1 - margen / 100);
                    var precio_peso_margen2 = parseFloat(precio_peso_margen1).toFixed(2);
                    var precio_peso_margen = Number(precio_peso_margen2);
                    var sql = "";
                    var options = {
                      'method': 'POST',
                      'url': 'company_ERP_WS/web/services/ECOMMERCE_CMP3/ESTADO/PROD/',
                      'key': fs.readFileSync('/certificados/.key'),
                      'cert': fs.readFileSync('/certificados/.pem'),  
                      'ca': fs.readFileSync('/certificados/.pem'),  
                      'passphrase': '',
                      'secureProtocol': 'TLSv1_1_method',
		              'headers': {
					    'Content-Type': 'application/json'
					  },
					  body: JSON.stringify({"item":codigo_global_PN})
                    };
                    try {       
                        request1(options, function (error, response) {
                            if (error) throw new Error(error);
                            if (response.body) {
                                var jsonObject = JSON.parse(response.body);
                                if (jsonObject["SQLStateInfo"]){
                                    try {
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);

                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                                if (jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"] == null){

                                    try {
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);

                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad ){ 
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);

                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);

                                        }
                                    } catch (e) {
                                        console.log(e);
                                    } 
                                }else{
                                    var stock_buch = jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"]["SCVA"];
                                    cantidad_total = (cantidad + stock_buch);
                                    if (cantidad_total > filtro_cantidad) {
                                        deshabilitar = false;
                                    }    
                                    try {       
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                console.log("deshabilitar" + id_producto)

                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad_total > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad_total > filtro_cantidad){ //No tendrá SKU != 0
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {
                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);

                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);

                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                            }
                        });    
                    }catch (e) {
                        console.log(e);
                    } 
                    //CON MARGEN
                }if(result != 0){
                    
                    const margen_def = margen; 
                    var precio_peso_margen1 = parseFloat(precio*valor_dolar).toFixed(2)  / (1 - result / 100);
                    var precio_peso_margen = parseFloat(precio_peso_margen1).toFixed(2);
                    var sql = "";
                    var options = {
                      'method': 'POST',
                      'url': 'company_ERP_WS/web/services/ECOMMERCE_CMP3/ESTADO/PROD',
                      'key': fs.readFileSync('/certificados/.key'),
                      'cert': fs.readFileSync('/certificados/.pem'),  
                      'ca': fs.readFileSync('/certificados/.pem'),  
                      'passphrase': '',
                      'secureProtocol': 'TLSv1_1_method',
		              'headers': {
					    'Content-Type': 'application/json'
					  },
					  body: JSON.stringify({"item":codigo_global_PN})
                    };
                    try {       
                        request1(options, function (error, response) {
                            if (error) throw new Error(error);
                            if (response.body) {
                                var jsonObject = JSON.parse(response.body);
                                if (jsonObject["SQLStateInfo"]){
                                    try {
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);

                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                                if (jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"] == null){
                                    try {
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && (sku != 0)) {                                                    
                                                    console.log(cantidad + " " + sku + " " + precio_peso_margen + " " + cientoveniente_dolares)
                                                    sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                    sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                    sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);

                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);

                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }   
                                    } catch (e) {
                                        console.log(e);
                                    } 
                                }else{
                                    var stock_buch = jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"]["SCVA"];
                                    cantidad_total = (cantidad + stock_buch);
                                    if (cantidad_total > filtro_cantidad) {
                                        deshabilitar = false;
                                    }   
                                    try {       
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad_total > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);

                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad_total > filtro_cantidad){ //No tendrá SKU != 0
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {
                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);

                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }   
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                            }
                        });    
                    }catch (e) {
                        console.log(e);
                    } 
                } 
            });
        }catch (e) {
            console.log(e);
        }
    });
}

}

async function obtener_margen(precio, reference){
    var margen_CMP_buch = await new Promise(function(resolve, reject) {
        try{
            var options = {
              'method': 'POST',
              'url': 'company_ERP_WS/web/services/ECOMMERCE_CMP/WEB',
              'key': fs.readFileSync('/certificados/.key'),
              'cert': fs.readFileSync('/certificados/.pem'),  
              'ca': fs.readFileSync('/certificados/.pem'),  
              'passphrase': '',
              'secureProtocol': 'TLSv1_1_method',
              'headers': {
			    'Content-Type': 'application/json'
			  },
			  body: JSON.stringify({"margen":reference})
            };
            request1(options, function (error, response) {
                if (error){
                    console.log("error : " + error);
                }else{
                    if (response.body) {
                        var jsonObject = JSON.parse(response.body);
                        if (jsonObject["SQLStateInfo"]){
                            resolve(0);
                        }
                        if (jsonObject["ECOMMERCE_CMP_Consulta_margen_R"] == null){
                            resolve(0);
                        }else{
                            var Margen_CMP = jsonObject["ECOMMERCE_CMP_Consulta_margen_R"]["AA1B8QA"];
                            resolve(Margen_CMP);
                        }
                    }
                }

            });
        } catch(error) {
            console.log("error : " + error);
            reject(error);
        }
    });
    return margen_CMP_buch;
}
async function actualiza_productos_CMP_ing(ig_final, valor_dolar, filtro_cantidad){
ingram_correo = [];
for(var i=0;i<ig_final.length;i++){
    var codigo_global_PN = replaces(ig_final[i].codigo_global);
    var proveedor = 2;
    var str_date = moment1(new Date()).tz("America/Santiago").format("YYYY-MM-DD HH:mm:ss");
    var datetime = str_date;
    var result_str = "";
    var deshabilitar =  ig_final[i].deshabilitar;
    var eliminar = false;
    var precio = ig_final[i].precio_unitario;
    var cantidad = ig_final[i].cantidad_disponible;
    var id_producto = ig_final[i].id_producto;
    var sku = ig_final[i].sku;
    var reference = ig_final[i].reference;
    var cientoveniente_dolares = parseFloat(valor_dolar*100).toFixed(2);

    res = await new Promise(function (resolve, reject) {
        try {
            var margen_buch = obtener_margen(precio, codigo_global_PN);
            margen_buch.then(function(result, error){
                if(error){
                    console.log("error: "+ error);
                }if(result == 0){
                    const margen_def = margen; 
                    var precio_peso_margen1 = parseFloat(precio*valor_dolar).toFixed(2)  / (1 - margen / 100);
                    var precio_peso_margen2 = parseFloat(precio_peso_margen1).toFixed(2);
                    var precio_peso_margen = Number(precio_peso_margen2);
                    var sql = "";
                    var options = {
                      'method': 'POST',
                      'url': 'company_ERP_WS/web/services/ECOMMERCE_CMP3/ESTADO/PROD',
                      'key': fs.readFileSync('/certificados/.key'),
                      'cert': fs.readFileSync('/certificados/.pem'),  
                      'ca': fs.readFileSync('/certificados/.pem'),  
                      'passphrase': '',
                      'secureProtocol': 'TLSv1_1_method',
		              'headers': {
					    'Content-Type': 'application/json'
					  },
					  body: JSON.stringify({"item":codigo_global_PN})
                    };
                    try {       
                        request1(options, function (error, response) {
                            if (error) throw new Error(error);
                            if (response.body) {
                                var jsonObject = JSON.parse(response.body);
                                if (jsonObject["SQLStateInfo"]){
                                    try {
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);

                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                                if (jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"] == null){
                                    try {
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    } 
                                }else{
                                    var stock_buch = jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"]["SCVA"];
                                    cantidad_total = (cantidad + stock_buch);
                                    if (cantidad_total > filtro_cantidad) {
                                        deshabilitar = false;
                                    }    
                                    try {       
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad_total > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > 20000) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad_total > filtro_cantidad){ //No tendrá SKU != 0
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {
                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);
                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                            }
                        });    
                    }catch (e) {
                        console.log(e);
                    } 
                    //CON MARGEN
                }if(result != 0){
                    const margen_def = margen; 
                    var precio_peso_margen1 = parseFloat(precio*valor_dolar).toFixed(2)  / (1 - result / 100);
                    var precio_peso_margen = parseFloat(precio_peso_margen1).toFixed(2);
                    var sql = "";
                    var options = {
                      'method': 'POST',
                      'url': 'company_ERP_WS/web/services/ECOMMERCE_CMP3/ESTADO/PROD',
                      'key': fs.readFileSync('/certificados/.key'),
                      'cert': fs.readFileSync('/certificados/.pem'),  
                      'ca': fs.readFileSync('/certificados/.pem'),  
                      'passphrase': '',
                      'secureProtocol': 'TLSv1_1_method',
		              'headers': {
					    'Content-Type': 'application/json'
					  },
					  body: JSON.stringify({"item":codigo_global_PN})
                    };
                    try {       
                        request1(options, function (error, response) {
                            if (error) throw new Error(error);
                            if (response.body) {
                                var jsonObject = JSON.parse(response.body);
                                if (jsonObject["SQLStateInfo"]){
                                    try {
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);
                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                                if (jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"] == null){
                                    try {
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);
                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    } 
                                }else{
                                    var stock_buch = jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"]["SCVA"];
                                    cantidad_total = (cantidad + stock_buch);
                                    if (cantidad_total > filtro_cantidad) {
                                        deshabilitar = false;
                                    }   
                                    try {       
                                        if (id_producto > 0) {
                                            var sql2 = "";
                                            var sql = "";
                                            var sql4 = "";
                                            var sql3 = "";
                                            if(deshabilitar == true) {
                                                sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql4 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql4 = ""
                                                }
                                            } else {
                                                if (cantidad_total > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > 20000) {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);

                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad_total > filtro_cantidad){ //No tendrá SKU != 0
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    } else {
                                                        sql = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql2 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql3 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql2, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql3, function (error, result, fields) {
                                                                if(sql4){
                                                                    connection.query(sql4, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {
                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);
                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                            }
                        });    
                    }catch (e) {
                        console.log(e);
                    } 
                } 
            });
        }catch (e) {
            console.log(e);
        }
    });    
}
}

async function actualiza_productos_CMP_intcomex(intcomex_final, valor_dolar, filtro_cantidad){
var jsonContent3 = beautify(intcomex_final, null, 2, 100);
    fs.writeFile("/actualizador_stock_prestashop/array_intcomex.json", jsonContent3, 'utf8', function (err) {
        if (err) {
            console.log("Error durante el guardado del JSON");
            return console.log(err);
        }
    });
for(var i=0;i<intcomex_final.length;i++){
    var codigo_global_PN = replaces(intcomex_final[i].sku);
    var proveedor = 4;
    var str_date = moment1(new Date()).tz("America/Santiago").format("YYYY-MM-DD HH:mm:ss");
    var datetime = str_date;
    var result_str = "";
    var deshabilitar =  false;
    var eliminar = false;
    var precio = intcomex_final[i].precio;
    var cantidad = intcomex_final[i].stockDisp;
    var id_producto = intcomex_final[i].id_producto;
    var sku = intcomex_final[i].sku;
    var reference = intcomex_final[i].reference;
    var cientoveniente_dolares = parseFloat(valor_dolar*100).toFixed(2);
    res = await new Promise(function (resolve, reject) {

        try {
            var margen_buch = obtener_margen(precio, codigo_global_PN);
            margen_buch.then(function(result, error){
                if(error){
                    console.log("error: "+ error);
                }if(result == 0){
                    const margen_def = margen; 
                    var precio_peso_margen1 = parseFloat(precio*valor_dolar).toFixed(2)  / (1 - margen / 100);
                    var precio_peso_margen2 = parseFloat(precio_peso_margen1).toFixed(2);
                    var precio_peso_margen = Number(precio_peso_margen2);
                    var sql = "";
                    var options = {
                      'method': 'POST',
                      'url': 'company_ERP_WS/web/services/ECOMMERCE_CMP3/ESTADO/PROD',
                      'key': fs.readFileSync('certificados/.key'),
                      'cert': fs.readFileSync('certificados/.pem'),  
                      'ca': fs.readFileSync('/certificados/.pem'),  
                      'passphrase': '',
                      'secureProtocol': 'TLSv1_1_method',
		              'headers': {
					    'Content-Type': 'application/json'
					  },
					  body: JSON.stringify({"item":codigo_global_PN})
                    };
                    try { 
                        request1(options, function (error, response) {
                            if (error) throw new Error(error);
                            if (response.body) {
                                var jsonObject = JSON.parse(response.body);
                                if (jsonObject["SQLStateInfo"]){
                                    try {
                                        if (id_producto > 0) {
                                            var sql20 = "";
                                            var sql0 = "";
                                            var sql40 = "";
                                            var sql30 = "";
                                            if(deshabilitar == true) {
                                                sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql40 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql40 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql0, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }

                                                    connection.query(sql20, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql30, function (error, result, fields) {
                                                                if(sql40){
                                                                    connection.query(sql40, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);

                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);

                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                                if (jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"] == null){
                                    try {
                                        if (id_producto > 0) {
                                            var sql20 = "";
                                            var sql0 = "";
                                            var sql40 = "";
                                            var sql30 = "";
                                            if(deshabilitar == true) {
                                                sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql40 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql40 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql0, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql20, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql30, function (error, result, fields) {
                                                                if(sql40){
                                                                    connection.query(sql40, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);

                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);

                                        }
                                    } catch (e) {
                                        console.log(e);
                                    } 
                                }else{
                                    var stock_buch = jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"]["SCVA"];
                                    cantidad_total = (cantidad + stock_buch);
                                    if (cantidad_total > filtro_cantidad) {
                                        deshabilitar = false;
                                    }    
                                    try {       
                                        if (id_producto > 0) {
                                            var sql20 = "";
                                            var sql0 = "";
                                            var sql40 = "";
                                            var sql30 = "";
                                            if(deshabilitar == true) {
                                                sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql40 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql40 = ""
                                                }
                                            } else {
                                                if (cantidad_total > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad_total > filtro_cantidad){ //No tendrá SKU != 0
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql0, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql20, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql30, function (error, result, fields) {
                                                                if(sql40){
                                                                    connection.query(sql40, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {
                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);
                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                            }
                        });    
                    }catch (e) {
                        console.log(e);
                    } 
                    //CON MARGEN
                }if(result != 0){
                    const margen_def = margen; 
                    var precio_peso_margen1 = parseFloat(precio*valor_dolar).toFixed(2)  / (1 - result / 100);
                    var precio_peso_margen = parseFloat(precio_peso_margen1).toFixed(2);
                    var sql = "";
                    var options = {
                      'method': 'POST',
                      'url': 'company_ERP_WS/web/services/ECOMMERCE_CMP3/ESTADO/PROD',
                      'key': fs.readFileSync('/certificados/.key'),
                      'cert': fs.readFileSync('/certificados/.pem'),  
                      'ca': fs.readFileSync('/certificados/.pem'),  
                      'passphrase': '',
                      'secureProtocol': 'TLSv1_1_method',
		              'headers': {
					    'Content-Type': 'application/json'
					  },
					  body: JSON.stringify({"item":codigo_global_PN})
                    };
                    try {       
                        request1(options, function (error, response) {
                            if (error) throw new Error(error);
                            if (response.body) {
                                var jsonObject = JSON.parse(response.body);
                                if (jsonObject["SQLStateInfo"]){
                                    try {
                                        if (id_producto > 0) {
                                            var sql20 = "";
                                            var sql0 = "";
                                            var sql40 = "";
                                            var sql30 = "";
                                            if(deshabilitar == true) {
                                                sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql40 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql40 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql0, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql20, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql30, function (error, result, fields) {
                                                                if(sql40){
                                                                    connection.query(sql40, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);
                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);

                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                                if (jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"] == null){
                                    try {
                                        if (id_producto > 0) {
                                            var sql20 = "";
                                            var sql0 = "";
                                            var sql40 = "";
                                            var sql30 = "";
                                            if(deshabilitar == true) {
                                                sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql40 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql40 = ""
                                                }
                                            } else {
                                                if (cantidad > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad > filtro_cantidad){ 
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql0, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql20, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql30, function (error, result, fields) {
                                                                if(sql40){
                                                                    connection.query(sql40, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {

                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);
                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    } 
                                }else{
                                    var stock_buch = jsonObject["ECOMMERCE_CMP3_Consulta_stock_buch_R"]["SCVA"];
                                    cantidad_total = (cantidad + stock_buch);
                                    if (cantidad_total > filtro_cantidad) {
                                        deshabilitar = false;
                                    }   
                                    try {       
                                        if (id_producto > 0) {
                                            var sql20 = "";
                                            var sql0 = "";
                                            var sql40 = "";
                                            var sql30 = "";
                                            if(deshabilitar == true) {
                                                sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '%s', active = '0', date_upd = '%s' WHERE id_product = '%s';", precio_peso_margen, datetime, id_producto);
                                                sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'",  id_producto);
                                                if(eliminar == true){
                                                    sql40 = parse("DELETE FROM prestashop.CMP1_product_supplier WHERE id_product = '%s' and id_supplier = 2",  id_producto);
                                                } else{
                                                    sql40 = ""
                                                }
                                            } else {
                                                if (cantidad_total > filtro_cantidad && sku != 0) {
                                                    if (precio_peso_margen > cientoveniente_dolares) {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);

                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '0',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    }
                                                } else {
                                                    if (cantidad_total > filtro_cantidad){ //No tendrá SKU != 0
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '%s', price = '%s', active = '1', date_upd = '%s' WHERE id_product = '%s';", cantidad_total, precio_peso_margen, datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '%s', active = '1',  date_upd = '%s' WHERE id_product = '%s'", precio_peso_margen, datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '%s' WHERE id_product = '%s'", cantidad_total, id_producto);
                                                    } else {
                                                        sql0 = parse("UPDATE prestashop.CMP1_product SET quantity = '0', price = '0', active = '0', date_upd = '%s' WHERE id_product = '%s';", datetime, id_producto);
                                                        sql20 = parse("UPDATE prestashop.CMP1_product_shop SET price = '0', active = '0',  date_upd = '%s' WHERE id_product = '%s'", datetime, id_producto);
                                                        sql30 = parse("UPDATE prestashop.CMP1_stock_available SET quantity = '0' WHERE id_product = '%s'", id_producto);
                                                    }
                                                }
                                            }
                                            pool.getConnection(function (err, connection) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                                connection.query(sql0, function (error, result, fields) {
                                                    if (err) {
                                                        console.log(err);
                                                    }
                                                    connection.query(sql20, function (error, result, fields) {
                                                        if(error){
                                                            console.log(error);
                                                        } else {
                                                            connection.query(sql30, function (error, result, fields) {
                                                                if(sql40){
                                                                    connection.query(sql40, function (error, result, fields) {
                                                                        if (connection) {
                                                                            connection.destroy();
                                                                        }
                                                                        if(result){
                                                                            if(result.changedRows == 1) {
                                                                                cantidad_de_productos = cantidad_de_productos + 1;
                                                                                resolve(1);

                                                                            } else if(result.affectedRows == 1) {
                                                                            } else {
                                                                            }
                                                                        }
                                                                    });
                                                                } else {
                                                                    if (connection) {
                                                                        connection.destroy();
                                                                    }
                                                                    if(result){
                                                                        if(result.changedRows == 1) {
                                                                            cantidad_de_productos = cantidad_de_productos + 1;
                                                                            resolve(1);
                                                                        } else if(result.affectedRows == 1) {
                                                                        } else {
                                                                        }
                                                                    }
                                                                };
                                                                resolve(1);
                                                            });                                    
                                                        }
                                                    });
                                                });
                                            });
                                        } else {
                                            console.log("No se encontro id producto ", sku);
                                            reject(0);
                                        }
                                    } catch (e) {
                                        console.log(e);
                                    }
                                }
                            }
                        });    
                    }catch (e) {
                        console.log(e);
                    } 
                } 
            });
        }catch (e) {
            console.log(e);
        }
    });    
}
}

async function reporte_actualizacion(array_new, array_old, valor_dolar, arregloIngram){
    array_mail = [];
    array_old = array_old.products;
    for(var i=0;i<array_new.length;i++){
    var proveedor = 3;
    var str_date = moment1(new Date()).tz("America/Santiago").format("YYYY-MM-DD HH:mm:ss");
    var datetime = str_date;
    var result_str = "";
    var deshabilitar = false;
    var eliminar = false;
    var precio = array_new[i].precio;
    var cantidad = array_new[i].stockDisp;
    var id_producto = array_new[i].id_producto;
    var sku = array_new[i].sku;
    var sql = "";
    var precio_peso_margen1 = parseFloat(precio*valor_dolar).toFixed(2)  / (1 - margen / 100);
    var precio_peso_margen2 = parseFloat(precio_peso_margen1).toFixed(2);
    var precio_peso_margen = Number(precio_peso_margen2);

    for(var j=0;j<array_old.length;j++){
        if (array_old[j].id == id_producto){
            precio_anterior = array_old[j].price;
            precio_anterior = parseFloat(precio_anterior).toFixed(2);
            cantidad_anterior = array_old[j].quantity;
            estado_anterior = array_old[j].active;
                if (cantidad == 0){
                    nota = "Valores referenciales, no actualizado en ecommerce por stock 0";
                }else{
                    nota = "";
                }
                if (cantidad == 0){
                estado_actual = 'Inactivo';
                }else{
                    estado_actual = 'Activo'
                }
                if (estado_anterior == 0){
                estado_anterior = 'Inactivo';
                }else{
                    estado_anterior = 'Activo';
                }
        } 
    }
    modificados = (" id producto: " + id_producto + " SKU: " + sku + " Precio Anterior: " + precio_anterior + " Precio CLP + margen: " + precio_peso_margen + " Precio sin margen: " + precio + " Valor dolar: " + valor_dolar + " Cantidad anterior: " + cantidad_anterior + " Cantidad actualizada: " + cantidad + " Estado anterior: " + estado_anterior + " estado_actual: " + estado_actual );
        if (modificados) {
            array_mail.push({
                            "Proveedor" : "TECNOGLOBAL",    
                            "ID de producto" : id_producto,
                            "fecha" : datetime,
                            "sku" : sku,
                            "Precio Anterior" : precio_anterior,
                            "Precio Actual" : precio_peso_margen,
                            "Precio sin Margen" : precio,
                            "Valor Dolar" : valor_dolar,
                            "Cantidad Anterior" : cantidad_anterior,
                            "Cantidad Actual" : cantidad,
                            "Estado Anterior" : estado_anterior,
                            "Estado Actual" : estado_actual,
                            "Nota" : nota,
                        });
        } else {
            console.log("Sin productos actualizados");
            reject("Sin productos actualizados");
        }
    }
    var promesa_correo = await new Promise(function(resolve, reject) {
        if (array_mail){
            var jsonContent1 = beautify(arregloIngram, null, 2, 100);
            //guarda el JSON con el arreglo de los productos CMP
                fs.appendFile('/CMP/actualizador_stock_prestashop/reporte.txt', jsonContent1, function (err) {
                  if (err) {
                    console.log("Error en salvado reporte");
                  } else {
                    console.log("Registro guardado con exito!");
                  }
                })
            var jsonContent2 = beautify(array_mail, null, 2, 100);
                fs.writeFile("/CMP/actualizador_stock_prestashop/correo.json", jsonContent2, 'utf8', function (err) {
                    if (err) {
                        console.log("Error durante el guardado del JSON");
                        return console.log(err);
                    }
                });      
        }
    });
}

function envia_correo(){
    fs.readFile('correo.json', function (err, data) {
        if (err) throw err;
        actualiza_tabla_informes();
    });
}

async function actualiza_tabla_informes(){
    res = await new Promise(function (resolve, reject) {
        try {      
            var str_date = moment1(new Date()).tz("America/Santiago").format("YYYY-MM-DD HH:mm:ss");
            var datetime = str_date;
            var sql = parse("UPDATE informes_ecommerce.ultima_act SET upd_date = '%s', actual = '1'", datetime);

            pool2.getConnection(function (err, connection) {
                if (err) {
                    console.log(err);
                }
                connection.query(sql, function (error, result, fields) {
                   if (error) {
                        console.log(error);
                   }else{
                        console.log("Tabla Actualizada")
                        if (connection){
                            connection.destroy();
                        }         
                   }                                    
                    resolve("1");
                });     
            });

        }catch (e) {
               console.log(e);
               reject(0);
        }
    }); 
}

async function sendmail_error_dolar(){
      var str_date = moment1(new Date()).tz("America/Santiago").format("YYYY-MM-DD HH:mm:ss");
      var datetime = str_date;
      var nodemailer = require('nodemailer');
      var transporter = nodemailer.createTransport({
          host: "",
          port: 25,
          secure: false, // upgrade later with STARTTLS
          auth: {
            user: "",
            pass: ""
          }
      });
      var maillist = [
      ];
      var mailOptions = {
        from: '',
        to: '',
        cc: '',
        subject: 'ecommerce web' + ' - ' + datetime,
        text: 'ecommerce web' + ' - ' + datetime
      };

      transporter.sendMail(mailOptions, function(error, info){
        if (error) {
          console.log(error);
        } else {
          console.log('Email sent: ' + info.response);
        }
      });
}


async function reporte() {
  console.log("preparando reporte");
  await sleep(60000);
   actualiza_tabla_informes();
}

function sleep(ms) {
  return new Promise((resolve) => {
    setTimeout(resolve, ms);
  });
}  

async function comparador(array_ig_final, array_tg_final, valor_dolar, result_tecnoglobal, w, filtro_cantidad){
    try {
        var comparador1 = activa_o_desactiva_CSV(array_ig_final);
        comparador1.then(function(result, error){
            if(error){
                console.log("error: "+ error);
            }
            if(result){
                const ig_final = result;
                compara_precios(ig_final, valor_dolar, filtro_cantidad);
            }
        });
    }catch(err) {
        console.log(err)
    }
}

async function main3(filtro_cantidad){
    var main3_resp = await new Promise(function(resolve, reject) {
        try {
            var promesa_token = obtener_token_intcomex();
            promesa_token.then(function(result, error){
                if(error){
                    console.log("error: "+ error);
                }
                if(result){
                    const token_intcomex = result.hash;
                    const time_intcomex = result.UTC_key;
                    var precio_dolar = obtiene_valor_dolar(); 
                    precio_dolar.then(function(result, error){
                        if(error){
                            console.log("error: "+ error);
                        } 
                        if(result && result != 0){        
                            valor_dolar = result + 10;
                            var prueba5 = obtiene_id_prestashop_intcomex();
                            prueba5.then(function(result, error){
                                if(error){
                                    console.log("error: "+ error);
                                }
                                if(result){
                                    const result_intcomex = result;
                                    var intcomex = obtener_sku_intcomex(result_intcomex);
                                    intcomex.then(function(result, error){
                                        if(error){
                                            console.log("error: "+ error);
                                        }
                                        if(result){
                                            const array_intcomex = result;
                                            if(array_intcomex){
                                                var json_intcomex = obtiene_datos_json_intcomex(array_intcomex);
                                                json_intcomex.then(function(result, error){
                                                    if(result){
                                                        const resultado_int = result;
                                                        if (resultado_int) {
                                                            actualiza_productos_CMP_intcomex(resultado_int, valor_dolar, filtro_cantidad);
                                                            resolve(1);
                                                        }
                                                    }
                                                });
                                            }    
                                        }
                                    });
                                }
                            });
                        }
                    }); 
                }
            }); 
        }catch(err) {
            console.log(err)
        }
    });
    return main3_resp;
}

async function main2(filtro_cantidad){
        try {
            var promesa_token = obtener_token();
            promesa_token.then(function(result, error){
                if(error){
                    console.log("error: "+ error);
                }
                if(result){
                    const token_ingram = result;
                    // ejecuta obtener prod de TECNOGLOBAL
                     var prueba2 = obtiene_productos_tecnoglobal();
                     prueba2.then(function(result, error){
                         if(error){
                             console.log("error: "+ error);    
                         }
                        //Precio dolar
                        var precio_dolar = obtiene_valor_dolar(); 
                        precio_dolar.then(function(result, error){
                            if(error){
                                console.log("error: "+ error);
                            } 
                            if(result && result != 0){        
                                valor_dolar = result + 10;
                                var prueba3 = obtiene_id_prestashop_tecnoglobal();
                                prueba3.then(function(result, error){
                                    if(error){
                                        console.log("error: "+ error);
                                    }
                                    if(result){
                                        const result_tecnoglobal = result;
                                        var prueba4 = obtiene_id_prestashop_ingram();
                                        prueba4.then(function(result, error){
                                            if(error){
                                                console.log("error: "+ error);
                                            }
                                            if(result){
                                                const result_ingram = result;
                                                var sku_tecnoglobal = obtener_sku_tecnoglobal(result_tecnoglobal);
                                                sku_tecnoglobal.then(function(result, error){
                                                    if(error){
                                                        console.log("error: "+ error);
                                                    }
                                                    if(result){
                                                        const array_tec = result;
                                                        var sku_ingram = obtener_sku_ingram(result_ingram);
                                                        sku_ingram.then(function(result, error){
                                                            if(error){
                                                                console.log("error: "+ error);
                                                            }
                                                            if(result){
                                                                const array_ingram = result;
                                                                //OBTIENE DATOS DE PRODUCTO EN EL JSON TECNOGLOBAL
                                                                var datos = obtiene_datos_json_tecnoglobal(array_tec);
                                                                datos.then(function(result, error){
                                                                    if(error){
                                                                        console.log("error: "+ error);
                                                                    }
                                                                    actualiza_productos_CMP_tec(result, valor_dolar, 2);                
                                                                    var i = 0;
                                                                    for (i = array_ingram.length; i >= 0 ; i--) {
                                                                        if(array_ingram[i]){
                                                                            const array_tg_final = result;
                                                                            var datos1 = obtiene_datos_json_ingram(array_ingram[i].sku, array_ingram[i].id_producto, array_ingram[i].reference, token_ingram);
                                                                            datos1.then(function(result, error){
                                                                                if(error){
                                                                                    console.log("error: "+ error);
                                                                                }
                                                                                if(result){
                                                                                    const array_ig_final = result;
                                                                                    comparador(array_ig_final, array_tg_final, valor_dolar, result_tecnoglobal, array_ingram.length, filtro_cantidad);
                                                                                }
                                                                            });
                                                                        }
                                                                     }
                                                                    
                                                                });
                                                            }
                                                        });
                                                    }
                                                });
                                            }
                                        });
                                    }
                                });
                            }else{
                                sendmail_error_dolar();
                            }
                        });
                     });
                }
            });
        }catch(err) {
            console.log(err)
        }
    reporte();
}
